{"ast":null,"code":"const Base64 = \")!@#$%^&*(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\";\n/**\n *  @_ignore\n */\nexport function decodeBits(width, data) {\n  const maxValue = (1 << width) - 1;\n  const result = [];\n  let accum = 0,\n    bits = 0,\n    flood = 0;\n  for (let i = 0; i < data.length; i++) {\n    // Accumulate 6 bits of data\n    accum = accum << 6 | Base64.indexOf(data[i]);\n    bits += 6;\n    // While we have enough for a word...\n    while (bits >= width) {\n      // ...read the word\n      const value = accum >> bits - width;\n      accum &= (1 << bits - width) - 1;\n      bits -= width;\n      // A value of 0 indicates we exceeded maxValue, it\n      // floods over into the next value\n      if (value === 0) {\n        flood += maxValue;\n      } else {\n        result.push(value + flood);\n        flood = 0;\n      }\n    }\n  }\n  return result;\n}\n//# sourceMappingURL=bit-reader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}