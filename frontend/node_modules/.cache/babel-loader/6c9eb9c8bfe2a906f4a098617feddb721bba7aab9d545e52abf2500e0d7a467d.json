{"ast":null,"code":"import _classPrivateMethodInitSpec from \"C:/Users/Admin/Desktop/fluent_GJ/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"C:/Users/Admin/Desktop/fluent_GJ/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _assertClassBrand from \"C:/Users/Admin/Desktop/fluent_GJ/frontend/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js\";\nimport _classPrivateFieldGet from \"C:/Users/Admin/Desktop/fluent_GJ/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js\";\nimport _classPrivateFieldSet from \"C:/Users/Admin/Desktop/fluent_GJ/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js\";\n// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\nimport { id } from \"../hash/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { Wordlist } from \"./wordlist.js\";\n/**\n *  An OWL format Wordlist is an encoding method that exploits\n *  the general locality of alphabetically sorted words to\n *  achieve a simple but effective means of compression.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on ASCII-7 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nvar _data = /*#__PURE__*/new WeakMap();\nvar _checksum = /*#__PURE__*/new WeakMap();\nvar _words = /*#__PURE__*/new WeakMap();\nvar _WordlistOwl_brand = /*#__PURE__*/new WeakSet();\nexport class WordlistOwl extends Wordlist {\n  /**\n   *  Creates a new Wordlist for %%locale%% using the OWL %%data%%\n   *  and validated against the %%checksum%%.\n   */\n  constructor(locale, data, _checksum2) {\n    super(locale);\n    _classPrivateMethodInitSpec(this, _WordlistOwl_brand);\n    _classPrivateFieldInitSpec(this, _data, void 0);\n    _classPrivateFieldInitSpec(this, _checksum, void 0);\n    _classPrivateFieldInitSpec(this, _words, void 0);\n    _classPrivateFieldSet(_data, this, data);\n    _classPrivateFieldSet(_checksum, this, _checksum2);\n    _classPrivateFieldSet(_words, this, null);\n  }\n  /**\n   *  The OWL-encoded data.\n   */\n  get _data() {\n    return _classPrivateFieldGet(_data, this);\n  }\n  /**\n   *  Decode all the words for the wordlist.\n   */\n  _decodeWords() {\n    return decodeOwl(_classPrivateFieldGet(_data, this));\n  }\n  getWord(index) {\n    const words = _assertClassBrand(_WordlistOwl_brand, this, _loadWords).call(this);\n    assertArgument(index >= 0 && index < words.length, \"invalid word index: \".concat(index), \"index\", index);\n    return words[index];\n  }\n  getWordIndex(word) {\n    return _assertClassBrand(_WordlistOwl_brand, this, _loadWords).call(this).indexOf(word);\n  }\n}\n//# sourceMappingURL=wordlist-owl.js.map\nfunction _loadWords() {\n  if (_classPrivateFieldGet(_words, this) == null) {\n    const words = this._decodeWords();\n    // Verify the computed list matches the official list\n    const checksum = id(words.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== _classPrivateFieldGet(_checksum, this)) {\n      throw new Error(\"BIP39 Wordlist for \".concat(this.locale, \" FAILED\"));\n    }\n    /* c8 ignore stop */\n    _classPrivateFieldSet(_words, this, words);\n  }\n  return _classPrivateFieldGet(_words, this);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}