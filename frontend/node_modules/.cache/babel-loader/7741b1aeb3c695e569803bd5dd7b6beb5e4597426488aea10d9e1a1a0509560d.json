{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\fluent_GJ\\\\frontend\\\\src\\\\components\\\\MessageList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageList = ({\n  messages,\n  currentUser,\n  selectedContact,\n  isLoading\n}) => {\n  _s();\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  const [wasNearBottom, setWasNearBottom] = useState(true);\n  const [prevMessageCount, setPrevMessageCount] = useState(0);\n  const [prevSelectedContact, setPrevSelectedContact] = useState(null);\n  useEffect(() => {\n    // When contact changes, scroll to bottom of new conversation\n    if (selectedContact !== prevSelectedContact) {\n      setPrevSelectedContact(selectedContact);\n      setPrevMessageCount(messages.length);\n      setWasNearBottom(true); // Reset to allow auto-scroll for new messages\n\n      // Scroll to bottom of the new conversation\n      if (selectedContact && messages.length > 0) {\n        setTimeout(() => {\n          scrollToBottom();\n        }, 200); // Increased delay for better DOM readiness\n      } else if (selectedContact) {\n        // Even for empty conversations, scroll to bottom area\n        setTimeout(() => {\n          scrollToBottom();\n        }, 200);\n      }\n      return;\n    }\n\n    // Only scroll if we have more messages than before AND user was near bottom\n    const hasNewMessages = messages.length > prevMessageCount;\n    if (hasNewMessages && wasNearBottom) {\n      scrollToBottom();\n    }\n    setPrevMessageCount(messages.length);\n  }, [messages, selectedContact, wasNearBottom, prevMessageCount, prevSelectedContact]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleScroll = () => {\n    if (!messagesContainerRef.current) return;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = messagesContainerRef.current;\n    const isNearBottom = scrollTop + clientHeight >= scrollHeight - 100;\n    setWasNearBottom(isNearBottom);\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = Math.abs(now - date) / 36e5;\n    if (diffInHours < 1) {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else if (diffInHours < 24) {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else if (diffInHours < 168) {\n      // Within a week\n      return date.toLocaleDateString([], {\n        weekday: 'short',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else {\n      return date.toLocaleDateString([], {\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  };\n  const formatAddress = address => {\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n  const groupMessagesByDate = messages => {\n    const groups = {};\n    messages.forEach(message => {\n      const date = new Date(message.timestamp);\n      const dateKey = date.toDateString();\n      if (!groups[dateKey]) {\n        groups[dateKey] = [];\n      }\n      groups[dateKey].push(message);\n    });\n    return groups;\n  };\n  const isToday = date => {\n    const today = new Date();\n    return date.toDateString() === today.toDateString();\n  };\n  const isYesterday = date => {\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    return date.toDateString() === yesterday.toDateString();\n  };\n  const formatDateHeader = dateString => {\n    const date = new Date(dateString);\n    if (isToday(date)) {\n      return 'Today';\n    } else if (isYesterday(date)) {\n      return 'Yesterday';\n    } else {\n      return date.toLocaleDateString([], {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n  if (!selectedContact) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list empty\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-conversation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversation-icon\",\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Welcome to Fluent Messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a contact from the sidebar to start a conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"features-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83D\\uDD12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"End-to-end encrypted on blockchain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Real-time synchronization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83C\\uDF10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Decentralized on Fluent Network\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  if (!messages || messages.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list empty\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-messages-icon\",\n          children: \"\\uD83D\\uDCDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No messages yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start the conversation with \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatAddress(selectedContact)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Messages are stored securely on the blockchain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n  const messageGroups = groupMessagesByDate(messages);\n  const sortedDates = Object.keys(messageGroups).sort((a, b) => new Date(a) - new Date(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list\",\n    ref: messagesContainerRef,\n    onScroll: handleScroll,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [sortedDates.map(dateString => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"date-label\",\n            children: formatDateHeader(dateString)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), messageGroups[dateString].map((message, index) => {\n          const isOwnMessage = message.sender.toLowerCase() === currentUser.toLowerCase();\n          const prevMessage = index > 0 ? messageGroups[dateString][index - 1] : null;\n          const showAvatar = !prevMessage || prevMessage.sender !== message.sender;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${isOwnMessage ? 'sent' : 'received'} ${showAvatar ? 'show-avatar' : ''}`,\n            children: [!isOwnMessage && showAvatar && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: formatAddress(message.sender).slice(0, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [!isOwnMessage && showAvatar && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-sender\",\n                children: formatAddress(message.sender)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-bubble\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-text\",\n                  children: message.message || message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"message-time\",\n                    children: formatTimestamp(message.timestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 25\n                  }, this), isOwnMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-status\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"status-icon\",\n                      title: \"Sent on blockchain\",\n                      children: \"\\u2713\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, `${message.timestamp}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this);\n        })]\n      }, dateString, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"\\uD83D\\uDC8E Messages are stored on Fluent blockchain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageList, \"tiB5frFZCiAdiD7hEyWoSvyYG/A=\");\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","MessageList","messages","currentUser","selectedContact","isLoading","_s","messagesEndRef","messagesContainerRef","wasNearBottom","setWasNearBottom","prevMessageCount","setPrevMessageCount","prevSelectedContact","setPrevSelectedContact","length","setTimeout","scrollToBottom","hasNewMessages","_messagesEndRef$curre","current","scrollIntoView","behavior","handleScroll","scrollTop","scrollHeight","clientHeight","isNearBottom","formatTimestamp","timestamp","date","Date","now","diffInHours","Math","abs","toLocaleTimeString","hour","minute","toLocaleDateString","weekday","month","day","formatAddress","address","slice","groupMessagesByDate","groups","forEach","message","dateKey","toDateString","push","isToday","today","isYesterday","yesterday","setDate","getDate","formatDateHeader","dateString","year","className","children","fileName","_jsxFileName","lineNumber","columnNumber","messageGroups","sortedDates","Object","keys","sort","a","b","ref","onScroll","map","index","isOwnMessage","sender","toLowerCase","prevMessage","showAvatar","content","title","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/fluent_GJ/frontend/src/components/MessageList.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst MessageList = ({ messages, currentUser, selectedContact, isLoading }) => {\r\n  const messagesEndRef = useRef(null);\r\n  const messagesContainerRef = useRef(null);\r\n  const [wasNearBottom, setWasNearBottom] = useState(true);\r\n  const [prevMessageCount, setPrevMessageCount] = useState(0);\r\n  const [prevSelectedContact, setPrevSelectedContact] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // When contact changes, scroll to bottom of new conversation\r\n    if (selectedContact !== prevSelectedContact) {\r\n      setPrevSelectedContact(selectedContact);\r\n      setPrevMessageCount(messages.length);\r\n      setWasNearBottom(true); // Reset to allow auto-scroll for new messages\r\n      \r\n      // Scroll to bottom of the new conversation\r\n      if (selectedContact && messages.length > 0) {\r\n        setTimeout(() => {\r\n          scrollToBottom();\r\n        }, 200); // Increased delay for better DOM readiness\r\n      } else if (selectedContact) {\r\n        // Even for empty conversations, scroll to bottom area\r\n        setTimeout(() => {\r\n          scrollToBottom();\r\n        }, 200);\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Only scroll if we have more messages than before AND user was near bottom\r\n    const hasNewMessages = messages.length > prevMessageCount;\r\n    \r\n    if (hasNewMessages && wasNearBottom) {\r\n      scrollToBottom();\r\n    }\r\n    \r\n    setPrevMessageCount(messages.length);\r\n  }, [messages, selectedContact, wasNearBottom, prevMessageCount, prevSelectedContact]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (!messagesContainerRef.current) return;\r\n    \r\n    const { scrollTop, scrollHeight, clientHeight } = messagesContainerRef.current;\r\n    const isNearBottom = scrollTop + clientHeight >= scrollHeight - 100;\r\n    setWasNearBottom(isNearBottom);\r\n  };\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    const diffInHours = Math.abs(now - date) / 36e5;\r\n\r\n    if (diffInHours < 1) {\r\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    } else if (diffInHours < 24) {\r\n      return date.toLocaleTimeString([], { \r\n        hour: '2-digit', \r\n        minute: '2-digit' \r\n      });\r\n    } else if (diffInHours < 168) { // Within a week\r\n      return date.toLocaleDateString([], { \r\n        weekday: 'short', \r\n        hour: '2-digit', \r\n        minute: '2-digit' \r\n      });\r\n    } else {\r\n      return date.toLocaleDateString([], { \r\n        month: 'short', \r\n        day: 'numeric',\r\n        hour: '2-digit', \r\n        minute: '2-digit' \r\n      });\r\n    }\r\n  };\r\n\r\n  const formatAddress = (address) => {\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n  };\r\n\r\n  const groupMessagesByDate = (messages) => {\r\n    const groups = {};\r\n    \r\n    messages.forEach(message => {\r\n      const date = new Date(message.timestamp);\r\n      const dateKey = date.toDateString();\r\n      \r\n      if (!groups[dateKey]) {\r\n        groups[dateKey] = [];\r\n      }\r\n      \r\n      groups[dateKey].push(message);\r\n    });\r\n    \r\n    return groups;\r\n  };\r\n\r\n  const isToday = (date) => {\r\n    const today = new Date();\r\n    return date.toDateString() === today.toDateString();\r\n  };\r\n\r\n  const isYesterday = (date) => {\r\n    const yesterday = new Date();\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    return date.toDateString() === yesterday.toDateString();\r\n  };\r\n\r\n  const formatDateHeader = (dateString) => {\r\n    const date = new Date(dateString);\r\n    \r\n    if (isToday(date)) {\r\n      return 'Today';\r\n    } else if (isYesterday(date)) {\r\n      return 'Yesterday';\r\n    } else {\r\n      return date.toLocaleDateString([], { \r\n        weekday: 'long', \r\n        year: 'numeric', \r\n        month: 'long', \r\n        day: 'numeric' \r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"message-list loading\">\r\n        <div className=\"loading-messages\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Loading messages...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!selectedContact) {\r\n    return (\r\n      <div className=\"message-list empty\">\r\n        <div className=\"no-conversation\">\r\n          <div className=\"no-conversation-icon\">💬</div>\r\n          <h3>Welcome to Fluent Messaging</h3>\r\n          <p>Select a contact from the sidebar to start a conversation</p>\r\n          <div className=\"features-list\">\r\n            <div className=\"feature\">\r\n              <span className=\"feature-icon\">🔒</span>\r\n              <span>End-to-end encrypted on blockchain</span>\r\n            </div>\r\n            <div className=\"feature\">\r\n              <span className=\"feature-icon\">⚡</span>\r\n              <span>Real-time synchronization</span>\r\n            </div>\r\n            <div className=\"feature\">\r\n              <span className=\"feature-icon\">🌐</span>\r\n              <span>Decentralized on Fluent Network</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!messages || messages.length === 0) {\r\n    return (\r\n      <div className=\"message-list empty\">\r\n        <div className=\"no-messages\">\r\n          <div className=\"no-messages-icon\">📝</div>\r\n          <h4>No messages yet</h4>\r\n          <p>Start the conversation with <strong>{formatAddress(selectedContact)}</strong></p>\r\n          <small>Messages are stored securely on the blockchain</small>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const messageGroups = groupMessagesByDate(messages);\r\n  const sortedDates = Object.keys(messageGroups).sort((a, b) => new Date(a) - new Date(b));\r\n\r\n  return (\r\n    <div className=\"message-list\" ref={messagesContainerRef} onScroll={handleScroll}>\r\n      <div className=\"messages-container\">\r\n        {sortedDates.map(dateString => (\r\n          <div key={dateString} className=\"message-group\">\r\n            <div className=\"date-header\">\r\n              <span className=\"date-label\">{formatDateHeader(dateString)}</span>\r\n            </div>\r\n            \r\n            {messageGroups[dateString].map((message, index) => {\r\n              const isOwnMessage = message.sender.toLowerCase() === currentUser.toLowerCase();\r\n              const prevMessage = index > 0 ? messageGroups[dateString][index - 1] : null;\r\n              const showAvatar = !prevMessage || prevMessage.sender !== message.sender;\r\n              \r\n              return (\r\n                <div\r\n                  key={`${message.timestamp}-${index}`}\r\n                  className={`message ${isOwnMessage ? 'sent' : 'received'} ${showAvatar ? 'show-avatar' : ''}`}\r\n                >\r\n                  {!isOwnMessage && showAvatar && (\r\n                    <div className=\"message-avatar\">\r\n                      <div className=\"avatar\">\r\n                        {formatAddress(message.sender).slice(0, 2)}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <div className=\"message-content\">\r\n                    {!isOwnMessage && showAvatar && (\r\n                      <div className=\"message-sender\">\r\n                        {formatAddress(message.sender)}\r\n                      </div>\r\n                    )}\r\n                    \r\n                    <div className=\"message-bubble\">\r\n                      <div className=\"message-text\">\r\n                        {message.message || message.content}\r\n                      </div>\r\n                      \r\n                      <div className=\"message-meta\">\r\n                        <span className=\"message-time\">\r\n                          {formatTimestamp(message.timestamp)}\r\n                        </span>\r\n                        \r\n                        {isOwnMessage && (\r\n                          <div className=\"message-status\">\r\n                            <span className=\"status-icon\" title=\"Sent on blockchain\">\r\n                              ✓\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <div className=\"message-list-footer\">\r\n        <small>💎 Messages are stored on Fluent blockchain</small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,eAAe;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAMC,cAAc,GAAGV,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMW,oBAAoB,GAAGX,MAAM,CAAC,IAAI,CAAC;EACzC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACe,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEpEF,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,eAAe,KAAKS,mBAAmB,EAAE;MAC3CC,sBAAsB,CAACV,eAAe,CAAC;MACvCQ,mBAAmB,CAACV,QAAQ,CAACa,MAAM,CAAC;MACpCL,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;;MAExB;MACA,IAAIN,eAAe,IAAIF,QAAQ,CAACa,MAAM,GAAG,CAAC,EAAE;QAC1CC,UAAU,CAAC,MAAM;UACfC,cAAc,CAAC,CAAC;QAClB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACX,CAAC,MAAM,IAAIb,eAAe,EAAE;QAC1B;QACAY,UAAU,CAAC,MAAM;UACfC,cAAc,CAAC,CAAC;QAClB,CAAC,EAAE,GAAG,CAAC;MACT;MACA;IACF;;IAEA;IACA,MAAMC,cAAc,GAAGhB,QAAQ,CAACa,MAAM,GAAGJ,gBAAgB;IAEzD,IAAIO,cAAc,IAAIT,aAAa,EAAE;MACnCQ,cAAc,CAAC,CAAC;IAClB;IAEAL,mBAAmB,CAACV,QAAQ,CAACa,MAAM,CAAC;EACtC,CAAC,EAAE,CAACb,QAAQ,EAAEE,eAAe,EAAEK,aAAa,EAAEE,gBAAgB,EAAEE,mBAAmB,CAAC,CAAC;EAErF,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAE,qBAAA;IAC3B,CAAAA,qBAAA,GAAAZ,cAAc,CAACa,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACf,oBAAoB,CAACY,OAAO,EAAE;IAEnC,MAAM;MAAEI,SAAS;MAAEC,YAAY;MAAEC;IAAa,CAAC,GAAGlB,oBAAoB,CAACY,OAAO;IAC9E,MAAMO,YAAY,GAAGH,SAAS,GAAGE,YAAY,IAAID,YAAY,GAAG,GAAG;IACnEf,gBAAgB,CAACiB,YAAY,CAAC;EAChC,CAAC;EAED,MAAMC,eAAe,GAAIC,SAAS,IAAK;IACrC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IAChC,MAAMG,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;IACtB,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACH,GAAG,GAAGF,IAAI,CAAC,GAAG,IAAI;IAE/C,IAAIG,WAAW,GAAG,CAAC,EAAE;MACnB,OAAOH,IAAI,CAACM,kBAAkB,CAAC,EAAE,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;IAC5E,CAAC,MAAM,IAAIL,WAAW,GAAG,EAAE,EAAE;MAC3B,OAAOH,IAAI,CAACM,kBAAkB,CAAC,EAAE,EAAE;QACjCC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIL,WAAW,GAAG,GAAG,EAAE;MAAE;MAC9B,OAAOH,IAAI,CAACS,kBAAkB,CAAC,EAAE,EAAE;QACjCC,OAAO,EAAE,OAAO;QAChBH,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,OAAOR,IAAI,CAACS,kBAAkB,CAAC,EAAE,EAAE;QACjCE,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE,SAAS;QACdL,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMK,aAAa,GAAIC,OAAO,IAAK;IACjC,OAAO,GAAGA,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAMD,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;EACxD,CAAC;EAED,MAAMC,mBAAmB,GAAI5C,QAAQ,IAAK;IACxC,MAAM6C,MAAM,GAAG,CAAC,CAAC;IAEjB7C,QAAQ,CAAC8C,OAAO,CAACC,OAAO,IAAI;MAC1B,MAAMnB,IAAI,GAAG,IAAIC,IAAI,CAACkB,OAAO,CAACpB,SAAS,CAAC;MACxC,MAAMqB,OAAO,GAAGpB,IAAI,CAACqB,YAAY,CAAC,CAAC;MAEnC,IAAI,CAACJ,MAAM,CAACG,OAAO,CAAC,EAAE;QACpBH,MAAM,CAACG,OAAO,CAAC,GAAG,EAAE;MACtB;MAEAH,MAAM,CAACG,OAAO,CAAC,CAACE,IAAI,CAACH,OAAO,CAAC;IAC/B,CAAC,CAAC;IAEF,OAAOF,MAAM;EACf,CAAC;EAED,MAAMM,OAAO,GAAIvB,IAAI,IAAK;IACxB,MAAMwB,KAAK,GAAG,IAAIvB,IAAI,CAAC,CAAC;IACxB,OAAOD,IAAI,CAACqB,YAAY,CAAC,CAAC,KAAKG,KAAK,CAACH,YAAY,CAAC,CAAC;EACrD,CAAC;EAED,MAAMI,WAAW,GAAIzB,IAAI,IAAK;IAC5B,MAAM0B,SAAS,GAAG,IAAIzB,IAAI,CAAC,CAAC;IAC5ByB,SAAS,CAACC,OAAO,CAACD,SAAS,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1C,OAAO5B,IAAI,CAACqB,YAAY,CAAC,CAAC,KAAKK,SAAS,CAACL,YAAY,CAAC,CAAC;EACzD,CAAC;EAED,MAAMQ,gBAAgB,GAAIC,UAAU,IAAK;IACvC,MAAM9B,IAAI,GAAG,IAAIC,IAAI,CAAC6B,UAAU,CAAC;IAEjC,IAAIP,OAAO,CAACvB,IAAI,CAAC,EAAE;MACjB,OAAO,OAAO;IAChB,CAAC,MAAM,IAAIyB,WAAW,CAACzB,IAAI,CAAC,EAAE;MAC5B,OAAO,WAAW;IACpB,CAAC,MAAM;MACL,OAAOA,IAAI,CAACS,kBAAkB,CAAC,EAAE,EAAE;QACjCC,OAAO,EAAE,MAAM;QACfqB,IAAI,EAAE,SAAS;QACfpB,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE;MACP,CAAC,CAAC;IACJ;EACF,CAAC;EAED,IAAIrC,SAAS,EAAE;IACb,oBACEL,OAAA;MAAK8D,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnC/D,OAAA;QAAK8D,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B/D,OAAA;UAAK8D,SAAS,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/BnE,OAAA;UAAA+D,QAAA,EAAG;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI,CAAC/D,eAAe,EAAE;IACpB,oBACEJ,OAAA;MAAK8D,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjC/D,OAAA;QAAK8D,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B/D,OAAA;UAAK8D,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9CnE,OAAA;UAAA+D,QAAA,EAAI;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCnE,OAAA;UAAA+D,QAAA,EAAG;QAAyD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChEnE,OAAA;UAAK8D,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B/D,OAAA;YAAK8D,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACtB/D,OAAA;cAAM8D,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxCnE,OAAA;cAAA+D,QAAA,EAAM;YAAkC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACNnE,OAAA;YAAK8D,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACtB/D,OAAA;cAAM8D,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvCnE,OAAA;cAAA+D,QAAA,EAAM;YAAyB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC,eACNnE,OAAA;YAAK8D,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACtB/D,OAAA;cAAM8D,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxCnE,OAAA;cAAA+D,QAAA,EAAM;YAA+B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI,CAACjE,QAAQ,IAAIA,QAAQ,CAACa,MAAM,KAAK,CAAC,EAAE;IACtC,oBACEf,OAAA;MAAK8D,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjC/D,OAAA;QAAK8D,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B/D,OAAA;UAAK8D,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1CnE,OAAA;UAAA+D,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBnE,OAAA;UAAA+D,QAAA,GAAG,8BAA4B,eAAA/D,OAAA;YAAA+D,QAAA,EAASpB,aAAa,CAACvC,eAAe;UAAC;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpFnE,OAAA;UAAA+D,QAAA,EAAO;QAA8C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,MAAMC,aAAa,GAAGtB,mBAAmB,CAAC5C,QAAQ,CAAC;EACnD,MAAMmE,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAI3C,IAAI,CAAC0C,CAAC,CAAC,GAAG,IAAI1C,IAAI,CAAC2C,CAAC,CAAC,CAAC;EAExF,oBACE1E,OAAA;IAAK8D,SAAS,EAAC,cAAc;IAACa,GAAG,EAAEnE,oBAAqB;IAACoE,QAAQ,EAAErD,YAAa;IAAAwC,QAAA,gBAC9E/D,OAAA;MAAK8D,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAChCM,WAAW,CAACQ,GAAG,CAACjB,UAAU,iBACzB5D,OAAA;QAAsB8D,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC7C/D,OAAA;UAAK8D,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1B/D,OAAA;YAAM8D,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEJ,gBAAgB,CAACC,UAAU;UAAC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,EAELC,aAAa,CAACR,UAAU,CAAC,CAACiB,GAAG,CAAC,CAAC5B,OAAO,EAAE6B,KAAK,KAAK;UACjD,MAAMC,YAAY,GAAG9B,OAAO,CAAC+B,MAAM,CAACC,WAAW,CAAC,CAAC,KAAK9E,WAAW,CAAC8E,WAAW,CAAC,CAAC;UAC/E,MAAMC,WAAW,GAAGJ,KAAK,GAAG,CAAC,GAAGV,aAAa,CAACR,UAAU,CAAC,CAACkB,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;UAC3E,MAAMK,UAAU,GAAG,CAACD,WAAW,IAAIA,WAAW,CAACF,MAAM,KAAK/B,OAAO,CAAC+B,MAAM;UAExE,oBACEhF,OAAA;YAEE8D,SAAS,EAAE,WAAWiB,YAAY,GAAG,MAAM,GAAG,UAAU,IAAII,UAAU,GAAG,aAAa,GAAG,EAAE,EAAG;YAAApB,QAAA,GAE7F,CAACgB,YAAY,IAAII,UAAU,iBAC1BnF,OAAA;cAAK8D,SAAS,EAAC,gBAAgB;cAAAC,QAAA,eAC7B/D,OAAA;gBAAK8D,SAAS,EAAC,QAAQ;gBAAAC,QAAA,EACpBpB,aAAa,CAACM,OAAO,CAAC+B,MAAM,CAAC,CAACnC,KAAK,CAAC,CAAC,EAAE,CAAC;cAAC;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACN,eAEDnE,OAAA;cAAK8D,SAAS,EAAC,iBAAiB;cAAAC,QAAA,GAC7B,CAACgB,YAAY,IAAII,UAAU,iBAC1BnF,OAAA;gBAAK8D,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAC5BpB,aAAa,CAACM,OAAO,CAAC+B,MAAM;cAAC;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CACN,eAEDnE,OAAA;gBAAK8D,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC7B/D,OAAA;kBAAK8D,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAC1Bd,OAAO,CAACA,OAAO,IAAIA,OAAO,CAACmC;gBAAO;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChC,CAAC,eAENnE,OAAA;kBAAK8D,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3B/D,OAAA;oBAAM8D,SAAS,EAAC,cAAc;oBAAAC,QAAA,EAC3BnC,eAAe,CAACqB,OAAO,CAACpB,SAAS;kBAAC;oBAAAmC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B,CAAC,EAENY,YAAY,iBACX/E,OAAA;oBAAK8D,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,eAC7B/D,OAAA;sBAAM8D,SAAS,EAAC,aAAa;sBAACuB,KAAK,EAAC,oBAAoB;sBAAAtB,QAAA,EAAC;oBAEzD;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CACN;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA,GArCD,GAAGlB,OAAO,CAACpB,SAAS,IAAIiD,KAAK,EAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsCjC,CAAC;QAEV,CAAC,CAAC;MAAA,GApDMP,UAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqDf,CACN,CAAC,eAEFnE,OAAA;QAAK2E,GAAG,EAAEpE;MAAe;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAENnE,OAAA;MAAK8D,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClC/D,OAAA;QAAA+D,QAAA,EAAO;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7D,EAAA,CAxPIL,WAAW;AAAAqF,EAAA,GAAXrF,WAAW;AA0PjB,eAAeA,WAAW;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}