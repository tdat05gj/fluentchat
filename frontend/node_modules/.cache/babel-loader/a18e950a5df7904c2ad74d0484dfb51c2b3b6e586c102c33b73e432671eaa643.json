{"ast":null,"code":"import { ethers } from 'ethers';\n\n// Official Fluent testnet configuration\nconst FLUENT_TESTNET_CONFIG = {\n  chainId: '0x51EA',\n  // 20994 in hex\n  chainName: 'Fluent Testnet',\n  nativeCurrency: {\n    name: 'ETH',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: ['https://rpc.testnet.fluent.xyz'],\n  blockExplorerUrls: ['https://testnet.fluentscan.xyz/']\n};\nclass WalletManager {\n  constructor() {\n    this.provider = null;\n    this.signer = null;\n    this.account = null;\n    this.isConnected = false;\n    this.pendingRequests = new Set();\n  }\n  async checkMetaMask() {\n    if (!window.ethereum) {\n      throw new Error('MetaMask is not installed. Please install MetaMask to use this dApp.');\n    }\n    return true;\n  }\n  async connectWallet() {\n    try {\n      await this.checkMetaMask();\n\n      // Request account access\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      if (accounts.length === 0) {\n        throw new Error('No accounts found. Please connect your wallet.');\n      }\n      this.provider = new ethers.BrowserProvider(window.ethereum);\n      this.signer = await this.provider.getSigner();\n      this.account = accounts[0];\n      this.isConnected = true;\n\n      // Switch to Fluent testnet\n      await this.switchToFluentTestnet();\n\n      // Listen for account changes\n      window.ethereum.on('accountsChanged', accounts => {\n        if (accounts.length === 0) {\n          this.disconnect();\n        } else {\n          this.account = accounts[0];\n          window.location.reload(); // Reload to refresh the app state\n        }\n      });\n\n      // Listen for network changes\n      window.ethereum.on('chainChanged', chainId => {\n        window.location.reload(); // Reload to refresh the app state\n      });\n      return {\n        account: this.account,\n        provider: this.provider,\n        signer: this.signer\n      };\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      throw error;\n    }\n  }\n  async switchToFluentTestnet() {\n    const requestKey = 'switchNetwork';\n\n    // Prevent duplicate requests\n    if (this.pendingRequests.has(requestKey)) {\n      console.log('Network switch already in progress, waiting...');\n      return;\n    }\n    try {\n      this.pendingRequests.add(requestKey);\n\n      // First check current network\n      const currentChainId = await window.ethereum.request({\n        method: 'eth_chainId'\n      });\n      console.log('Current chain ID:', currentChainId);\n\n      // If already on Fluent testnet, return\n      if (currentChainId.toLowerCase() === '0x51ea') {\n        console.log('Already on Fluent testnet');\n        return;\n      }\n\n      // Try to switch to existing network first\n      try {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: FLUENT_TESTNET_CONFIG.chainId\n          }]\n        });\n        console.log('Successfully switched to Fluent testnet');\n        return;\n      } catch (switchError) {\n        console.log('Switch failed:', switchError.code, switchError.message);\n\n        // Only add network if it doesn't exist (error 4902)\n        if (switchError.code === 4902) {\n          console.log('Network not found, attempting to add...');\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [FLUENT_TESTNET_CONFIG]\n          });\n          console.log('Successfully added and switched to Fluent testnet');\n          return;\n        } else if (switchError.code === -32002) {\n          // Request already pending - just wait and return\n          console.log('Request already pending - continuing without network switch');\n          return;\n        } else {\n          throw switchError;\n        }\n      }\n    } catch (error) {\n      console.error('Failed to switch to Fluent testnet:', error);\n\n      // Handle different error cases\n      if (error.code === 4001) {\n        console.log('User rejected network switch');\n        throw new Error('Network switch was rejected. Please manually switch to Fluent Testnet in MetaMask.');\n      } else if (error.code === -32002) {\n        console.log('Request already pending - continuing');\n        return; // Don't throw error, just continue\n      } else {\n        throw new Error('Please manually add Fluent Testnet to MetaMask:\\n' + '• Network Name: Fluent Testnet\\n' + '• RPC URL: https://rpc.testnet.fluent.xyz\\n' + '• Chain ID: 20994\\n' + '• Symbol: ETH');\n      }\n    } finally {\n      this.pendingRequests.delete(requestKey);\n    }\n  }\n  async checkNetwork() {\n    if (!this.provider) return false;\n    try {\n      const network = await this.provider.getNetwork();\n      const chainId = Number(network.chainId);\n      console.log('Current chain ID:', chainId);\n\n      // Accept multiple potential Fluent chain IDs\n      const validFluentIds = [20994, 84531, 421613];\n      const isValid = validFluentIds.includes(chainId);\n      console.log('Is valid Fluent network:', isValid);\n      return isValid;\n    } catch (error) {\n      console.error('Error checking network:', error);\n      return false;\n    }\n  }\n  async getBalance() {\n    if (!this.provider || !this.account) return '0';\n    try {\n      const balance = await this.provider.getBalance(this.account);\n      return ethers.formatEther(balance);\n    } catch (error) {\n      console.error('Error getting balance:', error);\n      return '0';\n    }\n  }\n  disconnect() {\n    this.provider = null;\n    this.signer = null;\n    this.account = null;\n    this.isConnected = false;\n  }\n  formatAddress(address) {\n    if (!address) return '';\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  }\n  async isConnectedAndOnCorrectNetwork() {\n    if (!this.isConnected || !this.provider) return false;\n    return await this.checkNetwork();\n  }\n}\nexport default new WalletManager();","map":{"version":3,"names":["ethers","FLUENT_TESTNET_CONFIG","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","WalletManager","constructor","provider","signer","account","isConnected","pendingRequests","Set","checkMetaMask","window","ethereum","Error","connectWallet","accounts","request","method","length","BrowserProvider","getSigner","switchToFluentTestnet","on","disconnect","location","reload","error","console","requestKey","has","log","add","currentChainId","toLowerCase","params","switchError","code","message","delete","checkNetwork","network","getNetwork","Number","validFluentIds","isValid","includes","getBalance","balance","formatEther","formatAddress","address","slice","isConnectedAndOnCorrectNetwork"],"sources":["C:/Users/Admin/Desktop/fluent_GJ/frontend/src/utils/wallet.js"],"sourcesContent":["import { ethers } from 'ethers';\r\n\r\n// Official Fluent testnet configuration\r\nconst FLUENT_TESTNET_CONFIG = {\r\n  chainId: '0x51EA', // 20994 in hex\r\n  chainName: 'Fluent Testnet',\r\n  nativeCurrency: {\r\n    name: 'ETH',\r\n    symbol: 'ETH',\r\n    decimals: 18,\r\n  },\r\n  rpcUrls: ['https://rpc.testnet.fluent.xyz'],\r\n  blockExplorerUrls: ['https://testnet.fluentscan.xyz/'],\r\n};\r\n\r\nclass WalletManager {\r\n  constructor() {\r\n    this.provider = null;\r\n    this.signer = null;\r\n    this.account = null;\r\n    this.isConnected = false;\r\n    this.pendingRequests = new Set();\r\n  }\r\n\r\n  async checkMetaMask() {\r\n    if (!window.ethereum) {\r\n      throw new Error('MetaMask is not installed. Please install MetaMask to use this dApp.');\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async connectWallet() {\r\n    try {\r\n      await this.checkMetaMask();\r\n\r\n      // Request account access\r\n      const accounts = await window.ethereum.request({\r\n        method: 'eth_requestAccounts',\r\n      });\r\n\r\n      if (accounts.length === 0) {\r\n        throw new Error('No accounts found. Please connect your wallet.');\r\n      }\r\n\r\n      this.provider = new ethers.BrowserProvider(window.ethereum);\r\n      this.signer = await this.provider.getSigner();\r\n      this.account = accounts[0];\r\n      this.isConnected = true;\r\n\r\n      // Switch to Fluent testnet\r\n      await this.switchToFluentTestnet();\r\n\r\n      // Listen for account changes\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length === 0) {\r\n          this.disconnect();\r\n        } else {\r\n          this.account = accounts[0];\r\n          window.location.reload(); // Reload to refresh the app state\r\n        }\r\n      });\r\n\r\n      // Listen for network changes\r\n      window.ethereum.on('chainChanged', (chainId) => {\r\n        window.location.reload(); // Reload to refresh the app state\r\n      });\r\n\r\n      return {\r\n        account: this.account,\r\n        provider: this.provider,\r\n        signer: this.signer,\r\n      };\r\n    } catch (error) {\r\n      console.error('Error connecting wallet:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async switchToFluentTestnet() {\r\n    const requestKey = 'switchNetwork';\r\n    \r\n    // Prevent duplicate requests\r\n    if (this.pendingRequests.has(requestKey)) {\r\n      console.log('Network switch already in progress, waiting...');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.pendingRequests.add(requestKey);\r\n      \r\n      // First check current network\r\n      const currentChainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      console.log('Current chain ID:', currentChainId);\r\n      \r\n      // If already on Fluent testnet, return\r\n      if (currentChainId.toLowerCase() === '0x51ea') {\r\n        console.log('Already on Fluent testnet');\r\n        return;\r\n      }\r\n\r\n      // Try to switch to existing network first\r\n      try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: FLUENT_TESTNET_CONFIG.chainId }],\r\n        });\r\n        console.log('Successfully switched to Fluent testnet');\r\n        return;\r\n      } catch (switchError) {\r\n        console.log('Switch failed:', switchError.code, switchError.message);\r\n        \r\n        // Only add network if it doesn't exist (error 4902)\r\n        if (switchError.code === 4902) {\r\n          console.log('Network not found, attempting to add...');\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [FLUENT_TESTNET_CONFIG],\r\n          });\r\n          console.log('Successfully added and switched to Fluent testnet');\r\n          return;\r\n        } else if (switchError.code === -32002) {\r\n          // Request already pending - just wait and return\r\n          console.log('Request already pending - continuing without network switch');\r\n          return;\r\n        } else {\r\n          throw switchError;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to switch to Fluent testnet:', error);\r\n      \r\n      // Handle different error cases\r\n      if (error.code === 4001) {\r\n        console.log('User rejected network switch');\r\n        throw new Error('Network switch was rejected. Please manually switch to Fluent Testnet in MetaMask.');\r\n      } else if (error.code === -32002) {\r\n        console.log('Request already pending - continuing');\r\n        return; // Don't throw error, just continue\r\n      } else {\r\n        throw new Error('Please manually add Fluent Testnet to MetaMask:\\n' +\r\n          '• Network Name: Fluent Testnet\\n' +\r\n          '• RPC URL: https://rpc.testnet.fluent.xyz\\n' +\r\n          '• Chain ID: 20994\\n' +\r\n          '• Symbol: ETH');\r\n      }\r\n    } finally {\r\n      this.pendingRequests.delete(requestKey);\r\n    }\r\n  }\r\n\r\n  async checkNetwork() {\r\n    if (!this.provider) return false;\r\n\r\n    try {\r\n      const network = await this.provider.getNetwork();\r\n      const chainId = Number(network.chainId);\r\n      console.log('Current chain ID:', chainId);\r\n      \r\n      // Accept multiple potential Fluent chain IDs\r\n      const validFluentIds = [20994, 84531, 421613];\r\n      const isValid = validFluentIds.includes(chainId);\r\n      console.log('Is valid Fluent network:', isValid);\r\n      \r\n      return isValid;\r\n    } catch (error) {\r\n      console.error('Error checking network:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getBalance() {\r\n    if (!this.provider || !this.account) return '0';\r\n\r\n    try {\r\n      const balance = await this.provider.getBalance(this.account);\r\n      return ethers.formatEther(balance);\r\n    } catch (error) {\r\n      console.error('Error getting balance:', error);\r\n      return '0';\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    this.provider = null;\r\n    this.signer = null;\r\n    this.account = null;\r\n    this.isConnected = false;\r\n  }\r\n\r\n  formatAddress(address) {\r\n    if (!address) return '';\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n  }\r\n\r\n  async isConnectedAndOnCorrectNetwork() {\r\n    if (!this.isConnected || !this.provider) return false;\r\n    return await this.checkNetwork();\r\n  }\r\n}\r\n\r\nexport default new WalletManager();\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;;AAE/B;AACA,MAAMC,qBAAqB,GAAG;EAC5BC,OAAO,EAAE,QAAQ;EAAE;EACnBC,SAAS,EAAE,gBAAgB;EAC3BC,cAAc,EAAE;IACdC,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,KAAK;IACbC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE,CAAC,gCAAgC,CAAC;EAC3CC,iBAAiB,EAAE,CAAC,iCAAiC;AACvD,CAAC;AAED,MAAMC,aAAa,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;EAClC;EAEA,MAAMC,aAAaA,CAAA,EAAG;IACpB,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;MACpB,MAAM,IAAIC,KAAK,CAAC,sEAAsE,CAAC;IACzF;IACA,OAAO,IAAI;EACb;EAEA,MAAMC,aAAaA,CAAA,EAAG;IACpB,IAAI;MACF,MAAM,IAAI,CAACJ,aAAa,CAAC,CAAC;;MAE1B;MACA,MAAMK,QAAQ,GAAG,MAAMJ,MAAM,CAACC,QAAQ,CAACI,OAAO,CAAC;QAC7CC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;QACzB,MAAM,IAAIL,KAAK,CAAC,gDAAgD,CAAC;MACnE;MAEA,IAAI,CAACT,QAAQ,GAAG,IAAIZ,MAAM,CAAC2B,eAAe,CAACR,MAAM,CAACC,QAAQ,CAAC;MAC3D,IAAI,CAACP,MAAM,GAAG,MAAM,IAAI,CAACD,QAAQ,CAACgB,SAAS,CAAC,CAAC;MAC7C,IAAI,CAACd,OAAO,GAAGS,QAAQ,CAAC,CAAC,CAAC;MAC1B,IAAI,CAACR,WAAW,GAAG,IAAI;;MAEvB;MACA,MAAM,IAAI,CAACc,qBAAqB,CAAC,CAAC;;MAElC;MACAV,MAAM,CAACC,QAAQ,CAACU,EAAE,CAAC,iBAAiB,EAAGP,QAAQ,IAAK;QAClD,IAAIA,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;UACzB,IAAI,CAACK,UAAU,CAAC,CAAC;QACnB,CAAC,MAAM;UACL,IAAI,CAACjB,OAAO,GAAGS,QAAQ,CAAC,CAAC,CAAC;UAC1BJ,MAAM,CAACa,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5B;MACF,CAAC,CAAC;;MAEF;MACAd,MAAM,CAACC,QAAQ,CAACU,EAAE,CAAC,cAAc,EAAG5B,OAAO,IAAK;QAC9CiB,MAAM,CAACa,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC;MAEF,OAAO;QACLnB,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBF,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,MAAM,EAAE,IAAI,CAACA;MACf,CAAC;IACH,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF;EAEA,MAAML,qBAAqBA,CAAA,EAAG;IAC5B,MAAMO,UAAU,GAAG,eAAe;;IAElC;IACA,IAAI,IAAI,CAACpB,eAAe,CAACqB,GAAG,CAACD,UAAU,CAAC,EAAE;MACxCD,OAAO,CAACG,GAAG,CAAC,gDAAgD,CAAC;MAC7D;IACF;IAEA,IAAI;MACF,IAAI,CAACtB,eAAe,CAACuB,GAAG,CAACH,UAAU,CAAC;;MAEpC;MACA,MAAMI,cAAc,GAAG,MAAMrB,MAAM,CAACC,QAAQ,CAACI,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAc,CAAC,CAAC;MAC/EU,OAAO,CAACG,GAAG,CAAC,mBAAmB,EAAEE,cAAc,CAAC;;MAEhD;MACA,IAAIA,cAAc,CAACC,WAAW,CAAC,CAAC,KAAK,QAAQ,EAAE;QAC7CN,OAAO,CAACG,GAAG,CAAC,2BAA2B,CAAC;QACxC;MACF;;MAEA;MACA,IAAI;QACF,MAAMnB,MAAM,CAACC,QAAQ,CAACI,OAAO,CAAC;UAC5BC,MAAM,EAAE,4BAA4B;UACpCiB,MAAM,EAAE,CAAC;YAAExC,OAAO,EAAED,qBAAqB,CAACC;UAAQ,CAAC;QACrD,CAAC,CAAC;QACFiC,OAAO,CAACG,GAAG,CAAC,yCAAyC,CAAC;QACtD;MACF,CAAC,CAAC,OAAOK,WAAW,EAAE;QACpBR,OAAO,CAACG,GAAG,CAAC,gBAAgB,EAAEK,WAAW,CAACC,IAAI,EAAED,WAAW,CAACE,OAAO,CAAC;;QAEpE;QACA,IAAIF,WAAW,CAACC,IAAI,KAAK,IAAI,EAAE;UAC7BT,OAAO,CAACG,GAAG,CAAC,yCAAyC,CAAC;UACtD,MAAMnB,MAAM,CAACC,QAAQ,CAACI,OAAO,CAAC;YAC5BC,MAAM,EAAE,yBAAyB;YACjCiB,MAAM,EAAE,CAACzC,qBAAqB;UAChC,CAAC,CAAC;UACFkC,OAAO,CAACG,GAAG,CAAC,mDAAmD,CAAC;UAChE;QACF,CAAC,MAAM,IAAIK,WAAW,CAACC,IAAI,KAAK,CAAC,KAAK,EAAE;UACtC;UACAT,OAAO,CAACG,GAAG,CAAC,6DAA6D,CAAC;UAC1E;QACF,CAAC,MAAM;UACL,MAAMK,WAAW;QACnB;MACF;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;;MAE3D;MACA,IAAIA,KAAK,CAACU,IAAI,KAAK,IAAI,EAAE;QACvBT,OAAO,CAACG,GAAG,CAAC,8BAA8B,CAAC;QAC3C,MAAM,IAAIjB,KAAK,CAAC,oFAAoF,CAAC;MACvG,CAAC,MAAM,IAAIa,KAAK,CAACU,IAAI,KAAK,CAAC,KAAK,EAAE;QAChCT,OAAO,CAACG,GAAG,CAAC,sCAAsC,CAAC;QACnD,OAAO,CAAC;MACV,CAAC,MAAM;QACL,MAAM,IAAIjB,KAAK,CAAC,mDAAmD,GACjE,kCAAkC,GAClC,6CAA6C,GAC7C,qBAAqB,GACrB,eAAe,CAAC;MACpB;IACF,CAAC,SAAS;MACR,IAAI,CAACL,eAAe,CAAC8B,MAAM,CAACV,UAAU,CAAC;IACzC;EACF;EAEA,MAAMW,YAAYA,CAAA,EAAG;IACnB,IAAI,CAAC,IAAI,CAACnC,QAAQ,EAAE,OAAO,KAAK;IAEhC,IAAI;MACF,MAAMoC,OAAO,GAAG,MAAM,IAAI,CAACpC,QAAQ,CAACqC,UAAU,CAAC,CAAC;MAChD,MAAM/C,OAAO,GAAGgD,MAAM,CAACF,OAAO,CAAC9C,OAAO,CAAC;MACvCiC,OAAO,CAACG,GAAG,CAAC,mBAAmB,EAAEpC,OAAO,CAAC;;MAEzC;MACA,MAAMiD,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;MAC7C,MAAMC,OAAO,GAAGD,cAAc,CAACE,QAAQ,CAACnD,OAAO,CAAC;MAChDiC,OAAO,CAACG,GAAG,CAAC,0BAA0B,EAAEc,OAAO,CAAC;MAEhD,OAAOA,OAAO;IAChB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,KAAK;IACd;EACF;EAEA,MAAMoB,UAAUA,CAAA,EAAG;IACjB,IAAI,CAAC,IAAI,CAAC1C,QAAQ,IAAI,CAAC,IAAI,CAACE,OAAO,EAAE,OAAO,GAAG;IAE/C,IAAI;MACF,MAAMyC,OAAO,GAAG,MAAM,IAAI,CAAC3C,QAAQ,CAAC0C,UAAU,CAAC,IAAI,CAACxC,OAAO,CAAC;MAC5D,OAAOd,MAAM,CAACwD,WAAW,CAACD,OAAO,CAAC;IACpC,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,GAAG;IACZ;EACF;EAEAH,UAAUA,CAAA,EAAG;IACX,IAAI,CAACnB,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EAEA0C,aAAaA,CAACC,OAAO,EAAE;IACrB,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;IACvB,OAAO,GAAGA,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAMD,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;EACxD;EAEA,MAAMC,8BAA8BA,CAAA,EAAG;IACrC,IAAI,CAAC,IAAI,CAAC7C,WAAW,IAAI,CAAC,IAAI,CAACH,QAAQ,EAAE,OAAO,KAAK;IACrD,OAAO,MAAM,IAAI,CAACmC,YAAY,CAAC,CAAC;EAClC;AACF;AAEA,eAAe,IAAIrC,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}