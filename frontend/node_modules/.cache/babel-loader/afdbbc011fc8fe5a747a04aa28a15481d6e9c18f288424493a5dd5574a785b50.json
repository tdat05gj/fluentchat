{"ast":null,"code":"// Counter Mode\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CTR_remaining, _CTR_remainingIndex, _CTR_counter;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CTR extends ModeOfOperation {\n  constructor(key, initialValue) {\n    super(\"CTR\", key, CTR);\n    // Remaining bytes for the one-time pad\n    _CTR_remaining.set(this, void 0);\n    _CTR_remainingIndex.set(this, void 0);\n    // The current counter\n    _CTR_counter.set(this, void 0);\n    __classPrivateFieldSet(this, _CTR_counter, new Uint8Array(16), \"f\");\n    __classPrivateFieldGet(this, _CTR_counter, \"f\").fill(0);\n    __classPrivateFieldSet(this, _CTR_remaining, __classPrivateFieldGet(this, _CTR_counter, \"f\"), \"f\"); // This will be discarded immediately\n    __classPrivateFieldSet(this, _CTR_remainingIndex, 16, \"f\");\n    if (initialValue == null) {\n      initialValue = 1;\n    }\n    if (typeof initialValue === \"number\") {\n      this.setCounterValue(initialValue);\n    } else {\n      this.setCounterBytes(initialValue);\n    }\n  }\n  get counter() {\n    return new Uint8Array(__classPrivateFieldGet(this, _CTR_counter, \"f\"));\n  }\n  setCounterValue(value) {\n    if (!Number.isInteger(value) || value < 0 || value > Number.MAX_SAFE_INTEGER) {\n      throw new TypeError(\"invalid counter initial integer value\");\n    }\n    for (let index = 15; index >= 0; --index) {\n      __classPrivateFieldGet(this, _CTR_counter, \"f\")[index] = value % 256;\n      value = Math.floor(value / 256);\n    }\n  }\n  setCounterBytes(value) {\n    if (value.length !== 16) {\n      throw new TypeError(\"invalid counter initial Uint8Array value length\");\n    }\n    __classPrivateFieldGet(this, _CTR_counter, \"f\").set(value);\n  }\n  increment() {\n    for (let i = 15; i >= 0; i--) {\n      if (__classPrivateFieldGet(this, _CTR_counter, \"f\")[i] === 255) {\n        __classPrivateFieldGet(this, _CTR_counter, \"f\")[i] = 0;\n      } else {\n        __classPrivateFieldGet(this, _CTR_counter, \"f\")[i]++;\n        break;\n      }\n    }\n  }\n  encrypt(plaintext) {\n    var _a, _b;\n    const crypttext = new Uint8Array(plaintext);\n    for (let i = 0; i < crypttext.length; i++) {\n      if (__classPrivateFieldGet(this, _CTR_remainingIndex, \"f\") === 16) {\n        __classPrivateFieldSet(this, _CTR_remaining, this.aes.encrypt(__classPrivateFieldGet(this, _CTR_counter, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _CTR_remainingIndex, 0, \"f\");\n        this.increment();\n      }\n      crypttext[i] ^= __classPrivateFieldGet(this, _CTR_remaining, \"f\")[__classPrivateFieldSet(this, _CTR_remainingIndex, (_b = __classPrivateFieldGet(this, _CTR_remainingIndex, \"f\"), _a = _b++, _b), \"f\"), _a];\n    }\n    return crypttext;\n  }\n  decrypt(ciphertext) {\n    return this.encrypt(ciphertext);\n  }\n}\n_CTR_remaining = new WeakMap(), _CTR_remainingIndex = new WeakMap(), _CTR_counter = new WeakMap();\n//# sourceMappingURL=mode-ctr.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}