{"ast":null,"code":"import { ethers } from 'ethers';\n\n// Try different potential Fluent testnet configurations\nconst FLUENT_TESTNET_CONFIGS = [{\n  chainId: '0x51EA',\n  // 20994 (original)\n  chainName: 'Fluent Testnet',\n  nativeCurrency: {\n    name: 'ETH',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: ['https://rpc.testnet.fluent.xyz'],\n  blockExplorerUrls: ['https://testnet.fluentscan.xyz/']\n}, {\n  chainId: '0x14A33',\n  // 84531 (alternative)\n  chainName: 'Fluent Testnet',\n  nativeCurrency: {\n    name: 'ETH',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: ['https://rpc.testnet.fluent.xyz'],\n  blockExplorerUrls: ['https://testnet.fluentscan.xyz/']\n}, {\n  chainId: '0x66EED',\n  // 421613 (another alternative)\n  chainName: 'Fluent Testnet',\n  nativeCurrency: {\n    name: 'ETH',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: ['https://rpc.testnet.fluent.xyz'],\n  blockExplorerUrls: ['https://testnet.fluentscan.xyz/']\n}];\nconst FLUENT_TESTNET_CONFIG = FLUENT_TESTNET_CONFIGS[0]; // Start with the first one\n\nclass WalletManager {\n  constructor() {\n    this.provider = null;\n    this.signer = null;\n    this.account = null;\n    this.isConnected = false;\n  }\n  async checkMetaMask() {\n    if (!window.ethereum) {\n      throw new Error('MetaMask is not installed. Please install MetaMask to use this dApp.');\n    }\n    return true;\n  }\n  async connectWallet() {\n    try {\n      await this.checkMetaMask();\n\n      // Request account access\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      if (accounts.length === 0) {\n        throw new Error('No accounts found. Please connect your wallet.');\n      }\n      this.provider = new ethers.BrowserProvider(window.ethereum);\n      this.signer = await this.provider.getSigner();\n      this.account = accounts[0];\n      this.isConnected = true;\n\n      // Switch to Fluent testnet\n      await this.switchToFluentTestnet();\n\n      // Listen for account changes\n      window.ethereum.on('accountsChanged', accounts => {\n        if (accounts.length === 0) {\n          this.disconnect();\n        } else {\n          this.account = accounts[0];\n          window.location.reload(); // Reload to refresh the app state\n        }\n      });\n\n      // Listen for network changes\n      window.ethereum.on('chainChanged', chainId => {\n        window.location.reload(); // Reload to refresh the app state\n      });\n      return {\n        account: this.account,\n        provider: this.provider,\n        signer: this.signer\n      };\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      throw error;\n    }\n  }\n  async switchToFluentTestnet() {\n    // First, try to detect current network\n    try {\n      const currentChainId = await window.ethereum.request({\n        method: 'eth_chainId'\n      });\n      console.log('Current MetaMask chain ID:', currentChainId);\n\n      // Check if already on a Fluent network\n      const possibleFluentIds = ['0x51EA', '0x14A33', '0x66EED'];\n      if (possibleFluentIds.includes(currentChainId.toUpperCase())) {\n        console.log('Already on Fluent testnet with chain ID:', currentChainId);\n        return;\n      }\n    } catch (error) {\n      console.log('Error checking current network:', error);\n    }\n\n    // Try each configuration\n    for (const config of FLUENT_TESTNET_CONFIGS) {\n      try {\n        console.log('Attempting to switch to Fluent testnet with chain ID:', config.chainId);\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: config.chainId\n          }]\n        });\n        console.log('Successfully switched to Fluent testnet');\n        return;\n      } catch (switchError) {\n        console.log('Switch error for', config.chainId, ':', switchError);\n\n        // If the network is not added, try to add it\n        if (switchError.code === 4902) {\n          try {\n            console.log('Adding Fluent testnet to MetaMask with config:', config);\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [config]\n            });\n            console.log('Successfully added Fluent testnet');\n            return;\n          } catch (addError) {\n            console.error('Error adding Fluent testnet:', addError);\n            // Continue to next configuration\n          }\n        }\n      }\n    }\n\n    // If all configurations failed, throw error\n    throw new Error('Failed to connect to Fluent testnet. Please add the network manually in MetaMask.');\n  }\n  async checkNetwork() {\n    if (!this.provider) return false;\n    try {\n      const network = await this.provider.getNetwork();\n      const chainId = Number(network.chainId);\n      console.log('Current chain ID:', chainId);\n      return chainId === 20994; // Fluent testnet chain ID\n    } catch (error) {\n      console.error('Error checking network:', error);\n      return false;\n    }\n  }\n  async getBalance() {\n    if (!this.provider || !this.account) return '0';\n    try {\n      const balance = await this.provider.getBalance(this.account);\n      return ethers.formatEther(balance);\n    } catch (error) {\n      console.error('Error getting balance:', error);\n      return '0';\n    }\n  }\n  disconnect() {\n    this.provider = null;\n    this.signer = null;\n    this.account = null;\n    this.isConnected = false;\n  }\n  formatAddress(address) {\n    if (!address) return '';\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  }\n  async isConnectedAndOnCorrectNetwork() {\n    if (!this.isConnected || !this.provider) return false;\n    return await this.checkNetwork();\n  }\n}\nexport default new WalletManager();","map":{"version":3,"names":["ethers","FLUENT_TESTNET_CONFIGS","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","FLUENT_TESTNET_CONFIG","WalletManager","constructor","provider","signer","account","isConnected","checkMetaMask","window","ethereum","Error","connectWallet","accounts","request","method","length","BrowserProvider","getSigner","switchToFluentTestnet","on","disconnect","location","reload","error","console","currentChainId","log","possibleFluentIds","includes","toUpperCase","config","params","switchError","code","addError","checkNetwork","network","getNetwork","Number","getBalance","balance","formatEther","formatAddress","address","slice","isConnectedAndOnCorrectNetwork"],"sources":["C:/Users/Admin/Desktop/fluent_GJ/frontend/src/utils/wallet.js"],"sourcesContent":["import { ethers } from 'ethers';\r\n\r\n// Try different potential Fluent testnet configurations\r\nconst FLUENT_TESTNET_CONFIGS = [\r\n  {\r\n    chainId: '0x51EA', // 20994 (original)\r\n    chainName: 'Fluent Testnet',\r\n    nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\r\n    rpcUrls: ['https://rpc.testnet.fluent.xyz'],\r\n    blockExplorerUrls: ['https://testnet.fluentscan.xyz/'],\r\n  },\r\n  {\r\n    chainId: '0x14A33', // 84531 (alternative)\r\n    chainName: 'Fluent Testnet',\r\n    nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\r\n    rpcUrls: ['https://rpc.testnet.fluent.xyz'],\r\n    blockExplorerUrls: ['https://testnet.fluentscan.xyz/'],\r\n  },\r\n  {\r\n    chainId: '0x66EED', // 421613 (another alternative)\r\n    chainName: 'Fluent Testnet',\r\n    nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\r\n    rpcUrls: ['https://rpc.testnet.fluent.xyz'],\r\n    blockExplorerUrls: ['https://testnet.fluentscan.xyz/'],\r\n  }\r\n];\r\n\r\nconst FLUENT_TESTNET_CONFIG = FLUENT_TESTNET_CONFIGS[0]; // Start with the first one\r\n\r\nclass WalletManager {\r\n  constructor() {\r\n    this.provider = null;\r\n    this.signer = null;\r\n    this.account = null;\r\n    this.isConnected = false;\r\n  }\r\n\r\n  async checkMetaMask() {\r\n    if (!window.ethereum) {\r\n      throw new Error('MetaMask is not installed. Please install MetaMask to use this dApp.');\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async connectWallet() {\r\n    try {\r\n      await this.checkMetaMask();\r\n\r\n      // Request account access\r\n      const accounts = await window.ethereum.request({\r\n        method: 'eth_requestAccounts',\r\n      });\r\n\r\n      if (accounts.length === 0) {\r\n        throw new Error('No accounts found. Please connect your wallet.');\r\n      }\r\n\r\n      this.provider = new ethers.BrowserProvider(window.ethereum);\r\n      this.signer = await this.provider.getSigner();\r\n      this.account = accounts[0];\r\n      this.isConnected = true;\r\n\r\n      // Switch to Fluent testnet\r\n      await this.switchToFluentTestnet();\r\n\r\n      // Listen for account changes\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length === 0) {\r\n          this.disconnect();\r\n        } else {\r\n          this.account = accounts[0];\r\n          window.location.reload(); // Reload to refresh the app state\r\n        }\r\n      });\r\n\r\n      // Listen for network changes\r\n      window.ethereum.on('chainChanged', (chainId) => {\r\n        window.location.reload(); // Reload to refresh the app state\r\n      });\r\n\r\n      return {\r\n        account: this.account,\r\n        provider: this.provider,\r\n        signer: this.signer,\r\n      };\r\n    } catch (error) {\r\n      console.error('Error connecting wallet:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async switchToFluentTestnet() {\r\n    // First, try to detect current network\r\n    try {\r\n      const currentChainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      console.log('Current MetaMask chain ID:', currentChainId);\r\n      \r\n      // Check if already on a Fluent network\r\n      const possibleFluentIds = ['0x51EA', '0x14A33', '0x66EED'];\r\n      if (possibleFluentIds.includes(currentChainId.toUpperCase())) {\r\n        console.log('Already on Fluent testnet with chain ID:', currentChainId);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.log('Error checking current network:', error);\r\n    }\r\n\r\n    // Try each configuration\r\n    for (const config of FLUENT_TESTNET_CONFIGS) {\r\n      try {\r\n        console.log('Attempting to switch to Fluent testnet with chain ID:', config.chainId);\r\n        \r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: config.chainId }],\r\n        });\r\n        \r\n        console.log('Successfully switched to Fluent testnet');\r\n        return;\r\n      } catch (switchError) {\r\n        console.log('Switch error for', config.chainId, ':', switchError);\r\n        \r\n        // If the network is not added, try to add it\r\n        if (switchError.code === 4902) {\r\n          try {\r\n            console.log('Adding Fluent testnet to MetaMask with config:', config);\r\n            await window.ethereum.request({\r\n              method: 'wallet_addEthereumChain',\r\n              params: [config],\r\n            });\r\n            console.log('Successfully added Fluent testnet');\r\n            return;\r\n          } catch (addError) {\r\n            console.error('Error adding Fluent testnet:', addError);\r\n            // Continue to next configuration\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    // If all configurations failed, throw error\r\n    throw new Error('Failed to connect to Fluent testnet. Please add the network manually in MetaMask.');\r\n  }\r\n\r\n  async checkNetwork() {\r\n    if (!this.provider) return false;\r\n\r\n    try {\r\n      const network = await this.provider.getNetwork();\r\n      const chainId = Number(network.chainId);\r\n      console.log('Current chain ID:', chainId);\r\n      return chainId === 20994; // Fluent testnet chain ID\r\n    } catch (error) {\r\n      console.error('Error checking network:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getBalance() {\r\n    if (!this.provider || !this.account) return '0';\r\n\r\n    try {\r\n      const balance = await this.provider.getBalance(this.account);\r\n      return ethers.formatEther(balance);\r\n    } catch (error) {\r\n      console.error('Error getting balance:', error);\r\n      return '0';\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    this.provider = null;\r\n    this.signer = null;\r\n    this.account = null;\r\n    this.isConnected = false;\r\n  }\r\n\r\n  formatAddress(address) {\r\n    if (!address) return '';\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n  }\r\n\r\n  async isConnectedAndOnCorrectNetwork() {\r\n    if (!this.isConnected || !this.provider) return false;\r\n    return await this.checkNetwork();\r\n  }\r\n}\r\n\r\nexport default new WalletManager();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}