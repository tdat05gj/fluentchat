{"ast":null,"code":"import { ethers } from 'ethers';\n\n// Official Fluent testnet configuration\nconst FLUENT_TESTNET_CONFIG = {\n  chainId: '0x51EA',\n  // 20994 in hex\n  chainName: 'Fluent Testnet',\n  nativeCurrency: {\n    name: 'ETH',\n    symbol: 'ETH',\n    decimals: 18\n  },\n  rpcUrls: ['https://rpc.testnet.fluent.xyz'],\n  blockExplorerUrls: ['https://testnet.fluentscan.xyz/']\n};\nclass WalletManager {\n  constructor() {\n    this.provider = null;\n    this.signer = null;\n    this.account = null;\n    this.isConnected = false;\n    this.pendingRequests = new Set();\n  }\n  async checkMetaMask() {\n    // Check if ethereum object exists\n    if (typeof window === 'undefined') {\n      throw new Error('This application requires a browser environment.');\n    }\n\n    // Wait a bit for MetaMask to initialize\n    let attempts = 0;\n    while (!window.ethereum && attempts < 10) {\n      await new Promise(resolve => setTimeout(resolve, 100));\n      attempts++;\n    }\n    if (!window.ethereum) {\n      throw new Error('MetaMask is not installed. Please install MetaMask to use this dApp.');\n    }\n\n    // Check if it's actually MetaMask\n    if (!window.ethereum.isMetaMask) {\n      console.warn('Non-MetaMask wallet detected');\n    }\n    return true;\n  }\n  async connectWallet() {\n    try {\n      await this.checkMetaMask();\n\n      // Safely access ethereum object\n      const ethereum = window.ethereum;\n      if (!ethereum) {\n        throw new Error('Ethereum provider not found');\n      }\n\n      // Request account access\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      if (accounts.length === 0) {\n        throw new Error('No accounts found. Please connect your wallet.');\n      }\n      this.provider = new ethers.BrowserProvider(ethereum);\n      this.signer = await this.provider.getSigner();\n      this.account = accounts[0];\n      this.isConnected = true;\n\n      // Try to switch to Fluent testnet (non-blocking)\n      try {\n        await this.switchToFluentTestnet();\n      } catch (networkError) {\n        console.warn('Network switch failed, but continuing with connection:', networkError.message);\n        // Don't throw here - allow connection to proceed even if network switch fails\n      }\n\n      // Listen for account changes (remove existing listeners first)\n      if (this.accountChangeListener) {\n        ethereum.removeListener('accountsChanged', this.accountChangeListener);\n      }\n      this.accountChangeListener = accounts => {\n        if (accounts.length === 0) {\n          this.disconnect();\n        } else {\n          this.account = accounts[0];\n          window.location.reload(); // Reload to refresh the app state\n        }\n      };\n      ethereum.on('accountsChanged', this.accountChangeListener);\n\n      // Listen for network changes (remove existing listeners first)\n      if (this.chainChangeListener) {\n        ethereum.removeListener('chainChanged', this.chainChangeListener);\n      }\n      this.chainChangeListener = chainId => {\n        console.log('Network changed to:', chainId);\n        window.location.reload(); // Reload to refresh the app state\n      };\n      ethereum.on('chainChanged', this.chainChangeListener);\n      return {\n        account: this.account,\n        provider: this.provider,\n        signer: this.signer\n      };\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      throw error;\n    }\n  }\n  async checkNetwork() {\n    try {\n      const chainId = await window.ethereum.request({\n        method: 'eth_chainId'\n      });\n      const isFluentNetwork = chainId.toLowerCase() === '0x51ea';\n      if (!isFluentNetwork) {\n        console.warn('Not on Fluent testnet. Current chain ID:', chainId);\n        return {\n          isCorrect: false,\n          currentChainId: chainId,\n          expectedChainId: '0x51ea'\n        };\n      }\n      return {\n        isCorrect: true,\n        currentChainId: chainId,\n        expectedChainId: '0x51ea'\n      };\n    } catch (error) {\n      console.error('Error checking network:', error);\n      return {\n        isCorrect: false,\n        error: error.message\n      };\n    }\n  }\n  async switchToFluentTestnet() {\n    const requestKey = 'switchNetwork';\n\n    // Prevent duplicate requests\n    if (this.pendingRequests.has(requestKey)) {\n      console.log('Network switch already in progress, waiting...');\n      return;\n    }\n    try {\n      this.pendingRequests.add(requestKey);\n\n      // Safely get ethereum object\n      const ethereum = window.ethereum;\n      if (!ethereum) {\n        throw new Error('Ethereum provider not available');\n      }\n\n      // First check current network\n      const currentChainId = await ethereum.request({\n        method: 'eth_chainId'\n      });\n      console.log('Current chain ID:', currentChainId);\n\n      // If already on Fluent testnet, return\n      if (currentChainId.toLowerCase() === '0x51ea') {\n        console.log('Already on Fluent testnet');\n        return;\n      }\n\n      // Try to switch to existing network first\n      try {\n        await ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: FLUENT_TESTNET_CONFIG.chainId\n          }]\n        });\n        console.log('Successfully switched to Fluent testnet');\n        return;\n      } catch (switchError) {\n        console.log('Switch failed:', switchError.code, switchError.message);\n\n        // Only add network if it doesn't exist (error 4902)\n        if (switchError.code === 4902) {\n          console.log('Network not found, attempting to add...');\n          await ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [FLUENT_TESTNET_CONFIG]\n          });\n          console.log('Successfully added and switched to Fluent testnet');\n          return;\n        } else if (switchError.code === -32002) {\n          // Request already pending - just wait and return\n          console.log('Request already pending - continuing without network switch');\n          return;\n        } else {\n          throw switchError;\n        }\n      }\n    } catch (error) {\n      console.error('Failed to switch to Fluent testnet:', error);\n\n      // Handle different error cases\n      if (error.code === 4001) {\n        console.log('User rejected network switch');\n        throw new Error('Network switch was rejected. Please manually switch to Fluent Testnet in MetaMask.');\n      } else if (error.code === -32002) {\n        console.log('Request already pending - continuing');\n        return; // Don't throw error, just continue\n      } else {\n        throw new Error('Please manually add Fluent Testnet to MetaMask:\\n' + '• Network Name: Fluent Testnet\\n' + '• RPC URL: https://rpc.testnet.fluent.xyz\\n' + '• Chain ID: 20994\\n' + '• Symbol: ETH');\n      }\n    } finally {\n      this.pendingRequests.delete(requestKey);\n    }\n  }\n  async checkNetwork() {\n    if (!this.provider) return false;\n    try {\n      const network = await this.provider.getNetwork();\n      const chainId = Number(network.chainId);\n      console.log('Current chain ID:', chainId);\n\n      // Accept multiple potential Fluent chain IDs\n      const validFluentIds = [20994, 84531, 421613];\n      const isValid = validFluentIds.includes(chainId);\n      console.log('Is valid Fluent network:', isValid);\n      return isValid;\n    } catch (error) {\n      console.error('Error checking network:', error);\n      return false;\n    }\n  }\n  async getBalance() {\n    if (!this.provider || !this.account) return '0';\n    try {\n      const balance = await this.provider.getBalance(this.account);\n      return ethers.formatEther(balance);\n    } catch (error) {\n      console.error('Error getting balance:', error);\n      return '0';\n    }\n  }\n  disconnect() {\n    this.provider = null;\n    this.signer = null;\n    this.account = null;\n    this.isConnected = false;\n  }\n  formatAddress(address) {\n    if (!address) return '';\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  }\n  async isConnectedAndOnCorrectNetwork() {\n    if (!this.isConnected || !this.provider) return false;\n    return await this.checkNetwork();\n  }\n}\nexport default new WalletManager();","map":{"version":3,"names":["ethers","FLUENT_TESTNET_CONFIG","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","WalletManager","constructor","provider","signer","account","isConnected","pendingRequests","Set","checkMetaMask","window","Error","attempts","ethereum","Promise","resolve","setTimeout","isMetaMask","console","warn","connectWallet","accounts","request","method","length","BrowserProvider","getSigner","switchToFluentTestnet","networkError","message","accountChangeListener","removeListener","disconnect","location","reload","on","chainChangeListener","log","error","checkNetwork","isFluentNetwork","toLowerCase","isCorrect","currentChainId","expectedChainId","requestKey","has","add","params","switchError","code","delete","network","getNetwork","Number","validFluentIds","isValid","includes","getBalance","balance","formatEther","formatAddress","address","slice","isConnectedAndOnCorrectNetwork"],"sources":["C:/Users/Admin/Desktop/fluent_GJ/frontend/src/utils/wallet.js"],"sourcesContent":["import { ethers } from 'ethers';\r\n\r\n// Official Fluent testnet configuration\r\nconst FLUENT_TESTNET_CONFIG = {\r\n  chainId: '0x51EA', // 20994 in hex\r\n  chainName: 'Fluent Testnet',\r\n  nativeCurrency: {\r\n    name: 'ETH',\r\n    symbol: 'ETH',\r\n    decimals: 18,\r\n  },\r\n  rpcUrls: ['https://rpc.testnet.fluent.xyz'],\r\n  blockExplorerUrls: ['https://testnet.fluentscan.xyz/'],\r\n};\r\n\r\nclass WalletManager {\r\n  constructor() {\r\n    this.provider = null;\r\n    this.signer = null;\r\n    this.account = null;\r\n    this.isConnected = false;\r\n    this.pendingRequests = new Set();\r\n  }\r\n\r\n  async checkMetaMask() {\r\n    // Check if ethereum object exists\r\n    if (typeof window === 'undefined') {\r\n      throw new Error('This application requires a browser environment.');\r\n    }\r\n\r\n    // Wait a bit for MetaMask to initialize\r\n    let attempts = 0;\r\n    while (!window.ethereum && attempts < 10) {\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      attempts++;\r\n    }\r\n\r\n    if (!window.ethereum) {\r\n      throw new Error('MetaMask is not installed. Please install MetaMask to use this dApp.');\r\n    }\r\n\r\n    // Check if it's actually MetaMask\r\n    if (!window.ethereum.isMetaMask) {\r\n      console.warn('Non-MetaMask wallet detected');\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  async connectWallet() {\r\n    try {\r\n      await this.checkMetaMask();\r\n\r\n      // Safely access ethereum object\r\n      const ethereum = window.ethereum;\r\n      if (!ethereum) {\r\n        throw new Error('Ethereum provider not found');\r\n      }\r\n\r\n      // Request account access\r\n      const accounts = await ethereum.request({\r\n        method: 'eth_requestAccounts',\r\n      });\r\n\r\n      if (accounts.length === 0) {\r\n        throw new Error('No accounts found. Please connect your wallet.');\r\n      }\r\n\r\n      this.provider = new ethers.BrowserProvider(ethereum);\r\n      this.signer = await this.provider.getSigner();\r\n      this.account = accounts[0];\r\n      this.isConnected = true;\r\n\r\n      // Try to switch to Fluent testnet (non-blocking)\r\n      try {\r\n        await this.switchToFluentTestnet();\r\n      } catch (networkError) {\r\n        console.warn('Network switch failed, but continuing with connection:', networkError.message);\r\n        // Don't throw here - allow connection to proceed even if network switch fails\r\n      }\r\n\r\n      // Listen for account changes (remove existing listeners first)\r\n      if (this.accountChangeListener) {\r\n        ethereum.removeListener('accountsChanged', this.accountChangeListener);\r\n      }\r\n      \r\n      this.accountChangeListener = (accounts) => {\r\n        if (accounts.length === 0) {\r\n          this.disconnect();\r\n        } else {\r\n          this.account = accounts[0];\r\n          window.location.reload(); // Reload to refresh the app state\r\n        }\r\n      };\r\n      \r\n      ethereum.on('accountsChanged', this.accountChangeListener);\r\n\r\n      // Listen for network changes (remove existing listeners first)\r\n      if (this.chainChangeListener) {\r\n        ethereum.removeListener('chainChanged', this.chainChangeListener);\r\n      }\r\n      \r\n      this.chainChangeListener = (chainId) => {\r\n        console.log('Network changed to:', chainId);\r\n        window.location.reload(); // Reload to refresh the app state\r\n      };\r\n      \r\n      ethereum.on('chainChanged', this.chainChangeListener);\r\n\r\n      return {\r\n        account: this.account,\r\n        provider: this.provider,\r\n        signer: this.signer,\r\n      };\r\n    } catch (error) {\r\n      console.error('Error connecting wallet:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async checkNetwork() {\r\n    try {\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      const isFluentNetwork = chainId.toLowerCase() === '0x51ea';\r\n      \r\n      if (!isFluentNetwork) {\r\n        console.warn('Not on Fluent testnet. Current chain ID:', chainId);\r\n        return {\r\n          isCorrect: false,\r\n          currentChainId: chainId,\r\n          expectedChainId: '0x51ea'\r\n        };\r\n      }\r\n      \r\n      return {\r\n        isCorrect: true,\r\n        currentChainId: chainId,\r\n        expectedChainId: '0x51ea'\r\n      };\r\n    } catch (error) {\r\n      console.error('Error checking network:', error);\r\n      return {\r\n        isCorrect: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  async switchToFluentTestnet() {\r\n    const requestKey = 'switchNetwork';\r\n    \r\n    // Prevent duplicate requests\r\n    if (this.pendingRequests.has(requestKey)) {\r\n      console.log('Network switch already in progress, waiting...');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.pendingRequests.add(requestKey);\r\n      \r\n      // Safely get ethereum object\r\n      const ethereum = window.ethereum;\r\n      if (!ethereum) {\r\n        throw new Error('Ethereum provider not available');\r\n      }\r\n      \r\n      // First check current network\r\n      const currentChainId = await ethereum.request({ method: 'eth_chainId' });\r\n      console.log('Current chain ID:', currentChainId);\r\n      \r\n      // If already on Fluent testnet, return\r\n      if (currentChainId.toLowerCase() === '0x51ea') {\r\n        console.log('Already on Fluent testnet');\r\n        return;\r\n      }\r\n\r\n      // Try to switch to existing network first\r\n      try {\r\n        await ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: FLUENT_TESTNET_CONFIG.chainId }],\r\n        });\r\n        console.log('Successfully switched to Fluent testnet');\r\n        return;\r\n      } catch (switchError) {\r\n        console.log('Switch failed:', switchError.code, switchError.message);\r\n        \r\n        // Only add network if it doesn't exist (error 4902)\r\n        if (switchError.code === 4902) {\r\n          console.log('Network not found, attempting to add...');\r\n          await ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [FLUENT_TESTNET_CONFIG],\r\n          });\r\n          console.log('Successfully added and switched to Fluent testnet');\r\n          return;\r\n        } else if (switchError.code === -32002) {\r\n          // Request already pending - just wait and return\r\n          console.log('Request already pending - continuing without network switch');\r\n          return;\r\n        } else {\r\n          throw switchError;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to switch to Fluent testnet:', error);\r\n      \r\n      // Handle different error cases\r\n      if (error.code === 4001) {\r\n        console.log('User rejected network switch');\r\n        throw new Error('Network switch was rejected. Please manually switch to Fluent Testnet in MetaMask.');\r\n      } else if (error.code === -32002) {\r\n        console.log('Request already pending - continuing');\r\n        return; // Don't throw error, just continue\r\n      } else {\r\n        throw new Error('Please manually add Fluent Testnet to MetaMask:\\n' +\r\n          '• Network Name: Fluent Testnet\\n' +\r\n          '• RPC URL: https://rpc.testnet.fluent.xyz\\n' +\r\n          '• Chain ID: 20994\\n' +\r\n          '• Symbol: ETH');\r\n      }\r\n    } finally {\r\n      this.pendingRequests.delete(requestKey);\r\n    }\r\n  }\r\n\r\n  async checkNetwork() {\r\n    if (!this.provider) return false;\r\n\r\n    try {\r\n      const network = await this.provider.getNetwork();\r\n      const chainId = Number(network.chainId);\r\n      console.log('Current chain ID:', chainId);\r\n      \r\n      // Accept multiple potential Fluent chain IDs\r\n      const validFluentIds = [20994, 84531, 421613];\r\n      const isValid = validFluentIds.includes(chainId);\r\n      console.log('Is valid Fluent network:', isValid);\r\n      \r\n      return isValid;\r\n    } catch (error) {\r\n      console.error('Error checking network:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getBalance() {\r\n    if (!this.provider || !this.account) return '0';\r\n\r\n    try {\r\n      const balance = await this.provider.getBalance(this.account);\r\n      return ethers.formatEther(balance);\r\n    } catch (error) {\r\n      console.error('Error getting balance:', error);\r\n      return '0';\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    this.provider = null;\r\n    this.signer = null;\r\n    this.account = null;\r\n    this.isConnected = false;\r\n  }\r\n\r\n  formatAddress(address) {\r\n    if (!address) return '';\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n  }\r\n\r\n  async isConnectedAndOnCorrectNetwork() {\r\n    if (!this.isConnected || !this.provider) return false;\r\n    return await this.checkNetwork();\r\n  }\r\n}\r\n\r\nexport default new WalletManager();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}